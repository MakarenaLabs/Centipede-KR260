#*****************************************************************************************
# Vivado (TM) v2022.1 (64-bit)
#
# project.tcl: Tcl script for re-creating project 'Centipede-KR260'
#
# Generated by Vivado on Tue Jul 04 13:13:17 +0200 2023
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (project.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../sources/color_ram.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/complete_address_decoder.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/delay_line.v"]"\
 "[file normalize "$origin_dir/../sources/dpram.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/latch_delay_line.v"]"\
 "[file normalize "$origin_dir/../sources/pf_ram_dp.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/pokey.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/pokey_countdown_timer.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/pokey_keyboard_scanner.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/pokey_noise_filter.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/pokey_poly_17_9.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/pokey_poly_4.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/pokey_poly_5.v"]"\
 "[file normalize "$origin_dir/../sources/spram.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/synchronizer.v"]"\
 "[file normalize "$origin_dir/../sources/pokey/syncreset_enable_divider.v"]"\
 "[file normalize "$origin_dir/../sources/T65/T65_Pack.vhd"]"\
 "[file normalize "$origin_dir/../sources/T65/T65_MCode.vhd"]"\
 "[file normalize "$origin_dir/../sources/T65/T65_ALU.vhd"]"\
 "[file normalize "$origin_dir/../sources/T65/T65.vhd"]"\
 "[file normalize "$origin_dir/../sources/centipede.v"]"\
 "[file normalize "$origin_dir/../sources/rgb_remapping.v"]"\
 "[file normalize "$origin_dir/../sources/pmod_audio.v"]"\
 "[file normalize "$origin_dir/../sources/bc6502/bc6502.v"]"\
 "[file normalize "$origin_dir/../sources/bc6502/addsub.v"]"\
 "[file normalize "$origin_dir/../sources/p6502.v"]"\
 "[file normalize "$origin_dir/../sources/nvram.v"]"\
 "[file normalize "$origin_dir/../sources/pause.v"]"\
 "[file normalize "$origin_dir/../sources/pll.v"]"\
 "[file normalize "$origin_dir/../sources/pll/pll_0002.v"]"\
 "[file normalize "$origin_dir/../sources/trackball.v"]"\
 "[file normalize "$origin_dir/../sources/constraints/top.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "Centipede-KR260"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xck26-sfvc784-2LV-c

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/../../../../../../AppData/Roaming/Xilinx/Vivado/2022.1/xhub/board_store/xilinx_board_store"] [file normalize "$origin_dir/../../../../kria-vitis-platforms/kr260/platforms/vivado/board_files/kr260_carrier/1.0"] [file normalize "$origin_dir/../../../../kria-vitis-platforms/kr260/platforms/vivado/board_files/kr260_som/1.0"]" -objects $obj
set_property -name "board_part" -value "xilinx.com:kr260_som:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "kr260_som" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "$origin_dir/../sources/color_ram.v"]\
 [file normalize "$origin_dir/../sources/pokey/complete_address_decoder.v"]\
 [file normalize "$origin_dir/../sources/pokey/delay_line.v"]\
 [file normalize "$origin_dir/../sources/dpram.v"]\
 [file normalize "$origin_dir/../sources/pokey/latch_delay_line.v"]\
 [file normalize "$origin_dir/../sources/pf_ram_dp.v"]\
 [file normalize "$origin_dir/../sources/pokey/pokey.v"]\
 [file normalize "$origin_dir/../sources/pokey/pokey_countdown_timer.v"]\
 [file normalize "$origin_dir/../sources/pokey/pokey_keyboard_scanner.v"]\
 [file normalize "$origin_dir/../sources/pokey/pokey_noise_filter.v"]\
 [file normalize "$origin_dir/../sources/pokey/pokey_poly_17_9.v"]\
 [file normalize "$origin_dir/../sources/pokey/pokey_poly_4.v"]\
 [file normalize "$origin_dir/../sources/pokey/pokey_poly_5.v"]\
 [file normalize "$origin_dir/../sources/spram.v"]\
 [file normalize "$origin_dir/../sources/pokey/synchronizer.v"]\
 [file normalize "$origin_dir/../sources/pokey/syncreset_enable_divider.v"]\
 [file normalize "$origin_dir/../sources/T65/T65_Pack.vhd"]\
 [file normalize "$origin_dir/../sources/T65/T65_MCode.vhd"]\
 [file normalize "$origin_dir/../sources/T65/T65_ALU.vhd"]\
 [file normalize "$origin_dir/../sources/T65/T65.vhd"]\
 [file normalize "$origin_dir/../sources/centipede.v"]\
 [file normalize "$origin_dir/../sources/rgb_remapping.v" ]\
 [file normalize "$origin_dir/../sources/pmod_audio.v"]\
 [file normalize "$origin_dir/../sources/bc6502/bc6502.v"]\
 [file normalize "$origin_dir/../sources/bc6502/addsub.v"]\
 [file normalize "$origin_dir/../sources/p6502.v"]\
 [file normalize "$origin_dir/../sources/nvram.v"]\
 [file normalize "$origin_dir/../sources/pause.v"]\
 [file normalize "$origin_dir/../sources/pll.v"]\
 [file normalize "$origin_dir/../sources/pll/pll_0002.v"]\
 [file normalize "$origin_dir/../sources/trackball.v"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "T65/T65_Pack.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T65/T65_MCode.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T65/T65_ALU.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "T65/T65.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize $origin_dir/../sources/constraints/top.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constraints/top.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "centipede" -objects $obj
set_property -name "top_file" -value "$origin_dir/../sources/centipede.v" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files color_ram.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/color_ram.v
}
if { [get_files complete_address_decoder.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/complete_address_decoder.v
}
if { [get_files delay_line.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/delay_line.v
}
if { [get_files dpram.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/dpram.v
}
if { [get_files latch_delay_line.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/latch_delay_line.v
}
if { [get_files pf_ram_dp.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pf_ram_dp.v
}
if { [get_files pokey.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/pokey.v
}
if { [get_files pokey_countdown_timer.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/pokey_countdown_timer.v
}
if { [get_files pokey_keyboard_scanner.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/pokey_keyboard_scanner.v
}
if { [get_files pokey_noise_filter.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/pokey_noise_filter.v
}
if { [get_files pokey_poly_17_9.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/pokey_poly_17_9.v
}
if { [get_files pokey_poly_4.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/pokey_poly_4.v
}
if { [get_files pokey_poly_5.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/pokey_poly_5.v
}
if { [get_files spram.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/spram.v
}
if { [get_files synchronizer.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/synchronizer.v
}
if { [get_files syncreset_enable_divider.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pokey/syncreset_enable_divider.v
}
if { [get_files T65_Pack.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T65/T65_Pack.vhd
}
if { [get_files T65_MCode.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T65/T65_MCode.vhd
}
if { [get_files T65_ALU.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T65/T65_ALU.vhd
}
if { [get_files T65.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/T65/T65.vhd
}
if { [get_files centipede.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/centipede.v
}
if { [get_files rgb_remapping.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/rgb_remapping.v
}
if { [get_files pmod_audio.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../sources/pmod_audio.v
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# centipede, pmod_audio, rgb_remapping



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  centipede\
  pmod_audio\
  rgb_remapping\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set AUDIO_LEFT [ create_bd_port -dir O AUDIO_LEFT ]
  set AUDIO_RIGHT [ create_bd_port -dir O AUDIO_RIGHT ]
  set BLUE [ create_bd_port -dir O -from 3 -to 0 BLUE ]
  set BUTTONS [ create_bd_port -dir I -from 7 -to 0 BUTTONS ]
  set CLK_IN_gem [ create_bd_port -dir I -type clk -freq_hz 25000000 CLK_IN_gem ]
  set GREEN [ create_bd_port -dir O -from 3 -to 0 GREEN ]
  set HSYNC [ create_bd_port -dir O HSYNC ]
  set RED [ create_bd_port -dir O -from 3 -to 0 RED ]
  set RESET [ create_bd_port -dir I RESET ]
  set VSYNC [ create_bd_port -dir O VSYNC ]

  # Create instance: centipede_0, and set properties
  set block_name centipede
  set block_cell_name centipede_0
  if { [catch {set centipede_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $centipede_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {400.0} \
   CONFIG.CLKOUT1_JITTER {375.008} \
   CONFIG.CLKOUT1_PHASE_ERROR {227.614} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {12.000} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {43.500} \
   CONFIG.MMCM_CLKIN1_PERIOD {40.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {90.625} \
   CONFIG.PRIM_IN_FREQ {25.000} \
   CONFIG.USE_LOCKED {false} \
   CONFIG.USE_RESET {false} \
 ] $clk_wiz_0

  # Create instance: pmod_audio_0, and set properties
  set block_name pmod_audio
  set block_cell_name pmod_audio_0
  if { [catch {set pmod_audio_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmod_audio_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: rgb_remapping_0, and set properties
  set block_name rgb_remapping
  set block_cell_name rgb_remapping_0
  if { [catch {set rgb_remapping_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $rgb_remapping_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {8} \
   CONFIG.IN1_WIDTH {8} \
 ] $xlconcat_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {8} \
 ] $xlconstant_0

  # Create port connections
  connect_bd_net -net BUTTONS_1 [get_bd_ports BUTTONS] [get_bd_pins centipede_0/joystick_i]
  connect_bd_net -net CLK_IN_gem_1 [get_bd_ports CLK_IN_gem] [get_bd_pins clk_wiz_0/clk_in1]
  connect_bd_net -net RESET_1 [get_bd_ports RESET] [get_bd_pins centipede_0/reset]
  connect_bd_net -net centipede_0_audio_o [get_bd_pins centipede_0/audio_o] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net centipede_0_hsync_o [get_bd_ports HSYNC] [get_bd_pins centipede_0/hsync_o]
  connect_bd_net -net centipede_0_rgb_o [get_bd_pins centipede_0/rgb_o] [get_bd_pins rgb_remapping_0/rgb_in]
  connect_bd_net -net centipede_0_vsync_o [get_bd_ports VSYNC] [get_bd_pins centipede_0/vsync_o]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins centipede_0/clk_12mhz] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins pmod_audio_0/clk]
  connect_bd_net -net pmod_audio_0_output_pmod [get_bd_ports AUDIO_LEFT] [get_bd_pins pmod_audio_0/output_pmod]
  connect_bd_net -net pmod_audio_0_output_pmod2 [get_bd_ports AUDIO_RIGHT] [get_bd_pins pmod_audio_0/output_pmod2]
  connect_bd_net -net rgb_remapping_0_B [get_bd_ports BLUE] [get_bd_pins rgb_remapping_0/B]
  connect_bd_net -net rgb_remapping_0_G [get_bd_ports GREEN] [get_bd_pins rgb_remapping_0/G]
  connect_bd_net -net rgb_remapping_0_R [get_bd_ports RED] [get_bd_pins rgb_remapping_0/R]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins pmod_audio_0/sample] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlconstant_0/dout]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.812903",
   "Default View_TopLeft":"-332,0",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port port-id_RESET -pg 1 -lvl 0 -x 0 -y 300 -defaultsOSRD
preplace port port-id_CLK_IN_gem -pg 1 -lvl 0 -x 0 -y 240 -defaultsOSRD
preplace port port-id_HSYNC -pg 1 -lvl 4 -x 840 -y 400 -defaultsOSRD
preplace port port-id_VSYNC -pg 1 -lvl 4 -x 840 -y 420 -defaultsOSRD
preplace port port-id_AUDIO_LEFT -pg 1 -lvl 4 -x 840 -y 60 -defaultsOSRD
preplace port port-id_AUDIO_RIGHT -pg 1 -lvl 4 -x 840 -y 80 -defaultsOSRD
preplace portBus BUTTONS -pg 1 -lvl 0 -x 0 -y 400 -defaultsOSRD
preplace portBus RED -pg 1 -lvl 4 -x 840 -y 300 -defaultsOSRD
preplace portBus GREEN -pg 1 -lvl 4 -x 840 -y 320 -defaultsOSRD
preplace portBus BLUE -pg 1 -lvl 4 -x 840 -y 340 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 1 -x 110 -y 240 -defaultsOSRD
preplace inst rgb_remapping_0 -pg 1 -lvl 3 -x 680 -y 320 -defaultsOSRD
preplace inst xlconcat_0 -pg 1 -lvl 2 -x 370 -y 130 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 1 -x 110 -y 140 -defaultsOSRD
preplace inst pmod_audio_0 -pg 1 -lvl 3 -x 680 -y 70 -defaultsOSRD
preplace inst centipede_0 -pg 1 -lvl 2 -x 370 -y 420 -defaultsOSRD
preplace netloc clk_wiz_0_clk_out1 1 1 2 200 50 540J
preplace netloc RESET_1 1 0 2 NJ 300 NJ
preplace netloc CLK_IN_gem_1 1 0 1 NJ 240
preplace netloc BUTTONS_1 1 0 2 NJ 400 NJ
preplace netloc centipede_0_rgb_o 1 2 1 540 320n
preplace netloc rgb_remapping_0_R 1 3 1 NJ 300
preplace netloc rgb_remapping_0_G 1 3 1 NJ 320
preplace netloc rgb_remapping_0_B 1 3 1 NJ 340
preplace netloc centipede_0_hsync_o 1 2 2 NJ 400 NJ
preplace netloc centipede_0_vsync_o 1 2 2 NJ 420 NJ
preplace netloc centipede_0_audio_o 1 1 2 210 60 530
preplace netloc xlconstant_0_dout 1 1 1 NJ 140
preplace netloc xlconcat_0_dout 1 2 1 540 80n
preplace netloc pmod_audio_0_output_pmod 1 3 1 NJ 60
preplace netloc pmod_audio_0_output_pmod2 1 3 1 NJ 80
levelinfo -pg 1 0 110 370 680 840
pagesize -pg 1 -db -bbox -sgen -150 0 990 630
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files

set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
add_files -norecurse -fileset sources_1 $wrapper_path
set_property top design_1_wrapper [current_fileset]
